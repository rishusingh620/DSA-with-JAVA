
public class LastOccurance_binarySearch {

    static int lastOccurance(int []arr,int target) {
        int n = arr.length;
        int st = 0, end = n - 1;
        int fo = -1;

        while (st <= end) {
            int mid = st + (end - st) / 2;
            if (target == arr[mid]) {
                fo = mid;
                st = mid + 1;     //It mean all the element are lesser. So, we have to search at the right side
            } else if (target <= arr[mid]) {
                end = mid - 1;
            } else {
                st = mid + 1;
            }
        }
        return fo;

    }




    public static void main(String[] args) {
        int[] arr = new int[]{2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 5, 6, 7, 6, 7, 8, 9};
        int target = 4;
        System.out.println(lastOccurance(arr, target));

    }
}
